--- #-------------------------------------------------------------------------------------------------------------

#-------------------------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See https://go.microsoft.com/fwlink/?linkid=2090316 for license information.
version: '3'
services:
  # Update this to the name of the service you want to work with in your docker-compose.yml file
  equest-devcontainer:
    # You may want to add a non-root user to your Dockerfile and uncomment the line below
    # to cause all processes to run as this user. Once present, you can also simply
    # use the "remoteUser" property in devcontainer.json if you just want VS Code and
    # its sub-processes (terminals, tasks, debugging) to execute as the user. On Linux,
    # you may need to ensure the UID and GID of the container user you create matches your
    # local user. See https://aka.ms/vscode-remote/containers/non-root for details.
    user: node
    # Uncomment if you want to add a different Dockerfile in the .devcontainer folder
    build:
      context: .
      dockerfile: .devcontainer/Dockerfile
    ports:
      - 3000:3000
      - '9676:9676'
      - '9677:9677'
      - '9678:9678'
      - '9679:9679'
    depends_on:
      - postgres
      - redis
      - pgadmin
    volumes:
      # Update this to wherever you want VS Code to mount the folder of your project
      - .:/workspace
      # - equest-vscode-volume:/workspace
      # Node modules for every package, very worth in terms of performance.
      - nm-equest-root:/workspace/node_modules
      - nm-equest-api:/workspace/@equest/api/node_modules
      - nm-equest-blog:/workspace/@equest/blog/node_modules
      - nm-equest-client:/workspace/@equest/client/node_modules
      - nm-equest-config:/workspace/@equest/config/node_modules
      - nm-equest-database:/workspace/@equest/database/node_modules
      - nm-equest-frontend:/workspace/@equest/frontend/node_modules
      - nm-equest-graphql:/workspace/@equest/graphql/node_modules
      - nm-equest-rlparser:/workspace/@equest/rlparser/node_modules
      - nm-equest-utils:/workspace/@equest/utils/node_modules
      - nm-equest-worker:/workspace/@equest/worker/node_modules

      # Save devcontainer specific extensions between rebuilds
      - equest-vscode-extensions:/root/.vscode-server
      # Uncomment the next line to use Docker from inside the container. See https://aka.ms/vscode-remote/samples/docker-in-docker-compose for details.
      - /var/run/docker.sock:/var/run/docker.sock
    # Overrides default command so things don't shut down after the process ends.
    command: /bin/sh -c "while sleep 1000; do :; done"
    networks:
      - equest

  postgres:
    # image: equest-postgres:11
    build:
      context: .devcontainer/postgres
      dockerfile: Dockerfile
    container_name: equest-postgres
    user: $UID
    working_dir: /
    volumes:
      - equest-postgres-volume:/var/lib/postgresql/data
      - ./data:/data
    ports:
      - '5432:5432'
    restart: unless-stopped
    env_file: .devcontainer/.docker.env
    command: postgres -c config_file=/var/lib/postgresql/postgresql.conf -c logging_collector=on -c log_destination=stderr -c log_directory=/var/lib/postgresql/data/logs -c log_rotation_age=60 -c log_truncate_on_rotation=on -c log_filename=server_log.hour.%H%M
    networks:
      - equest

  redis:
    image: redis:alpine
    container_name: equest-redis
    command: redis-server --requirepass redisPassword
    ports:
      - '6379:6379'
    volumes:
      - equest-redis-volume:/var/lib/redis
    restart: unless-stopped
    networks:
      - equest
  pgadmin:
    container_name: equest-pgadmin
    image: dpage/pgadmin4
    env_file: .devcontainer/.docker.env
    volumes:
      - equest-pgadmin-volume:/root/.pgadmin
    ports:
      - '4050:80'
    # networks:
    #   - default
    restart: unless-stopped
    networks:
      - equest

networks:
  equest:
    external: true

volumes:
  # Postgres' data
  equest-postgres-volume:
  # Redis' data
  equest-redis-volume:
  # PGAdmin's data
  equest-pgadmin-volume:
  equest-vscode-volume:
  # Node modules
  nm-equest-root:
  nm-equest-api:
  nm-equest-blog:
  nm-equest-client:
  nm-equest-config:
  nm-equest-database:
  nm-equest-frontend:
  nm-equest-graphql:
  nm-equest-rlparser:
  nm-equest-utils:
  nm-equest-worker:
  # used for keeeping vscode-extensions while rebuilding
  equest-vscode-extensions:
