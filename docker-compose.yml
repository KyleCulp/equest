--- #-------------------------------------------------------------------------------------------------------------

#-------------------------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See https://go.microsoft.com/fwlink/?linkid=2090316 for license information.
version: '3'
services:
  # Update this to the name of the service you want to work with in your docker-compose.yml file
  backend:
    # You may want to add a non-root user to your Dockerfile and uncomment the line below
    # to cause all processes to run as this user. Once present, you can also simply
    # use the "remoteUser" property in devcontainer.json if you just want VS Code and
    # its sub-processes (terminals, tasks, debugging) to execute as the user. On Linux,
    # you may need to ensure the UID and GID of the container user you create matches your
    # local user. See https://aka.ms/vscode-remote/containers/non-root for details.
    user: node
    # Uncomment if you want to add a different Dockerfile in the .devcontainer folder
    build:
      context: .
      dockerfile: .devcontainer/Dockerfile
    ports:
      - 3000:3000
    depends_on:
      - postgres
      - redis
    volumes:
      # Update this to wherever you want VS Code to mount the folder of your project
      - .:/workspace
      # Uncomment the next line to use Docker from inside the container. See https://aka.ms/vscode-remote/samples/docker-in-docker-compose for details.
      - /var/run/docker.sock:/var/run/docker.sock
    # Uncomment the next four lines if you will use a ptrace-based debugger like C++, Go, and Rust.
    # cap_add:
    #   - SYS_PTRACE
    # security_opt:
    #   - seccomp:unconfined

    # Overrides default command so things don't shut down after the process ends.
    command: /bin/sh -c "while sleep 1000; do :; done"

  postgres:
    image: postgres:11
    container_name: postgres
    user: $UID
    working_dir: /
    volumes:
      - db-volume:/var/lib/postgresql/data
      - ./data:/data
    ports:
      - '5432:5432'
    restart: unless-stopped
    networks:
      - default
    command: postgres -c logging_collector=on -c log_destination=stderr -c log_directory=/var/lib/postgresql/data/logs -c log_rotation_age=60 -c log_truncate_on_rotation=on -c log_filename=server_log.hour.%H%M

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - '6379:6379'
    volumes:
      - /srv/docker/redis:/var/lib/redis
    networks:
      - default
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    volumes:
      - pgadmin-volume:/root/.pgadmin
    ports:
      - '${PGADMIN_PORT:-5050}:80'
    networks:
      - default
    restart: unless-stopped

networks:
  default:
    # No metadata required right now.

volumes:
  # Postgres' data
  db-volume:
  # Redis' data
  redis-volume:
  # PGAdmin's data
  pgadmin-volume:
  # Node modules
  nm_root:
  # used for keeeping vscode-extensions while rebuilding
  vscode-extensions:
