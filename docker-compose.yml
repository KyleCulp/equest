version: '3.7'
services:
  devserver:
    build:
      context: .
      dockerfile: Dockerfile
      # target: dev
      args:
        USER_UID: $UID
        SETUP_MODE: dev
    user: $UID
    env_file:
      - .docker.env
    volumes:
      - .:/work
      - /var/run/docker.sock:/var/run/docker.sock
      - nm_root:/work/node_modules
      ## https://code.visualstudio.com/docs/remote/containers-advanced#_avoiding-extension-reinstalls-on-container-rebuild
      - vscode-extensions:/root/.vscode-server
      #! LINUX HOST ONLY
      ## copies your ssh credentials, to be able to use them from within the container
      ## (see: https://code.visualstudio.com/docs/remote/containers#_sharing-git-credentials-with-your-container)
      # - $HOME/.ssh:/root/.home-localhost/.ssh:ro
      ## .bashrc
      # - $HOME/.bashrc:/root/.home-localhost/.bashrc:ro
      ## .gitconfig
      # - $HOME/.gitconfig:/root/.home-localhost/.gitconfig:ro
      ## .tmux
      # - $HOME/tmux.conf:/root/.home-localhost/tmux.conf:ro
      ##! WINDOWS HOST ONLY
      ##* on windows host can't mount single files
      ## comment all the other `.home-localhost` lines above this
      # - $HOME:/root/.home-localhost:ro
    working_dir: /work
    networks:
      - default
    ports:
      # The main server
      - '3000:3000'
      # Node `--inspect=...` port numbers for debugging
      - '9678:9678'
      - '9876:9876'
      - '9757:9757'
    depends_on:
      - postgres
      - redis
      - pgadmin
    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity

  # Postgres DB
  postgres:
    image: postgres:11
    container_name: postgres
    # Unlike above, the Postgres image cannot start as our user account
    # otherwise we get permission denied errors. So this one has to run as
    # root. :(
    #
    # user: $UID
    working_dir: /
    volumes:
      - db-volume:/var/lib/postgresql/data
      - ./data:/data
    ports:
      - '5432:5432'
    restart: unless-stopped
    networks:
      - default
    command: postgres -c logging_collector=on -c log_destination=stderr -c log_directory=/var/lib/postgresql/data/logs -c log_rotation_age=60 -c log_truncate_on_rotation=on -c log_filename=server_log.hour.%H%M

  # Redis
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - '6379:6379'
    volumes:
      - /srv/docker/redis:/var/lib/redis
    networks:
      - default
    restart: unless-stopped
  
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    volumes:
      - pgadmin-volume:/root/.pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - default
    restart: unless-stopped
      

networks:
    default:
        # No metadata required right now.

volumes:
    # Postgres' data
    db-volume:
    # Redis' data
    redis-volume:
    # PGAdmin's data
    pgadmin-volume:
    # Node modules
    nm_root:
    # used for keeeping vscode-extensions while rebuilding
    vscode-extensions:
